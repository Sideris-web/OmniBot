import logging
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
import openai

# üî• –í–°–¢–ê–ù–û–í–õ–Æ–Ñ–ú–û –ö–õ–Æ–ß–Ü –ù–ê–ü–†–Ø–ú–£
TELEGRAM_BOT_TOKEN = "7858075515:AAHkJvKomSWgS6V4-qx4b76dCW04IcOYutE"
OPENAI_API_KEY = "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"

# üî• –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—å, —â–æ –∫–ª—é—á—ñ –Ω–µ –ø—É—Å—Ç—ñ
if not TELEGRAM_BOT_TOKEN:
    raise ValueError("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –≤–∫–∞–∑–∞–Ω–æ!")
if not OPENAI_API_KEY:
    raise ValueError("‚ùå OPENAI_API_KEY –Ω–µ –≤–∫–∞–∑–∞–Ω–æ!")

# üî• OpenAI Projects API –ø–æ—Ç—Ä–µ–±—É—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è!
client = openai.OpenAI(api_key=OPENAI_API_KEY, base_url="https://api.openai.com/v1")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Telegram –±–æ—Ç–∞
bot = Bot(token=TELEGRAM_BOT_TOKEN)
dp = Dispatcher(bot)

# –õ–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.reply("–ü—Ä–∏–≤—ñ—Ç! –Ø OmniBot ü§ñ. –ó–∞–ø–∏—Ç–∞–π –º–µ–Ω–µ —â–æ –∑–∞–≤–≥–æ–¥–Ω–æ!")

# –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@dp.message_handler()
async def chat_with_gpt(message: types.Message):
    try:
        response = client.chat.completions.create(
            model="gpt-4o-2024-11-20",  # ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –º–æ–¥–µ–ª—å, —è–∫–∞ –¥–æ–∑–≤–æ–ª–µ–Ω–∞
            messages=[{"role": "user", "content": message.text}]
        )
        reply = response.choices[0].message.content
        await message.reply(reply)
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ OpenAI API: {e}")
        await message.reply("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑!")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
